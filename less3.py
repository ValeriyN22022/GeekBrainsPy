# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def sums(a, b):
    try:
        return a / b
    except ZeroDivisionError:
        return 'Делить на ноль нельзя!'


a = int(input('insert first value'))
b = int(input('insert second value'))

print(sums(a, b))

# 2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой.
name = input('введите имя')
surname = input('введите фамилию')
birth = input('введите год рождения')
city = input('введите город проживания')
email = input('введите email')
tel = input('введите телефон')

cv = print(lambda name, surname, birth, city, email, tel: f'name: {name}, surname: {surname}, birth: {birth}, city: {city}, email: {email}, tel: {tel}')

print(cv(name, surname, birth, city, email, tel))

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
a = int(input('введите первый аргумент'))
b = int(input('введите второй аргумент'))
c = int(input('введите третий аргумент'))


def my_func(a, b, c):
    d = [a, b, c]
    d.sort()
    return 'Сумма получилась', d[1] + d[2]


print(my_func(a, b, c))
# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.
a = int(input('введите действительное число'))
b = int(input('введите целое отрицательное число'))


def my_pow_func(a, b):
    try:
        c = a
        for i in range(-b - 1):
            c = a * c
        return 'Первый вариант', a ** b, 'второй способ', 1 / c
    except ValueError:
        return 'Введены неправильные значения'


print(my_pow_func(a, b))
# Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет
# добавляться к уже подсчитанной сумме.

def etern_sum():
    sum = 0
    while True:
        li = input('Enter values for sum').split()
        for i in li:
            if i == 'exit':
                return sum
            sum += int(i)


print(f'Сумма чисел {etern_sum()}')

#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
words = input('введите слова')

upper_case = lambda words: words.title()

print(upper_case(words))
#7 невижу отличий от шестого в моем варианте решения